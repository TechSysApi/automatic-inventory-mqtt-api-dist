swagger: '2.0'
info:
  title: 'Automatic Inventory Stream API'
  description: 'Interfaces with ASL to stop and start blocks on the feeding line in order to match a series of parcels to a transport (using a blockID).  Controls keep track of multiple parcels, referred to as a block. Controls create a gap between the different blocks. For parcels that cannot be singulated and are sent to the NiO-Workstation, the interface allows querying the current blockID.'
  contact:
    name: techsysplus
    email: devops.techsysplus@post.ch
  version: 3.0.0
host: 'server:8080'
basePath: MQTT
parameters:
  sourceDestinationConversationParameters:
    -
      name: srcSystem
      in: path
      description: '3-letter uppercase name identifying the system issuing the message'
      type: string
      default: MDS
    -
      name: srcInstance
      in: path
      description: 'two-digit padded number identifying the system instance issuing the message'
      type: string
      default: '01'
    -
      name: dstSystem
      in: path
      description: '3-letter uppercase name identifying the system receiving the message'
      type: string
      default: ASL
    -
      name: dstInstance
      in: path
      description: 'two-digit padded number identifying the system instance receiving the message'
      type: string
      default: '01'
    -
      name: conversationId
      in: path
      description: 'ID that will be included in the get-response topic in order to correlate the messages'
      type: string
      default: '12345'
    -
      name: sortingUnitPrefix
      in: path
      description: 'Human readable prefix to identify the sorting unit and possibly its location.'
      type: string
  sourceSystemInstanceParameters:
    -
      name: srcSystem
      in: path
      description: '3-letter uppercase name identifying the system issuing the message'
      type: string
      default: ASL
    -
      name: srcInstance
      in: path
      description: 'two-digit padded number identifying the system instance issuing the message'
      type: string
      default: '01'
paths:
  '/{sortingUnitPrefix}/inventory/v3/app/feedingline:start-block/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used to notify the feeding line to start a new block with a gap to the previous block.'
      tags:
        - app
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/StartBlockRequest'}
  '/{sortingUnitPrefix}/inventory/v3/app/feedingline:stop-block/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used to notify the feeding line to stop the current block.'
      tags:
        - app
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/StopBlockRequest'}
  '/{sortingUnitPrefix}/inventory/v3/machine/feedingline:start-block:status/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used to notify the app of the success of the block starting. To be sent by the machine right after the reception of the start-block request once the conditions to start the gap have been met.'
      tags:
        - machine
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/RequestStatus'}
  '/{sortingUnitPrefix}/inventory/v3/machine/feedingline:stop-block:status/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used to notify the app of the status of the stop. To be sent by the machine right after the reception of the stop-block request once the conditions to start the gap have been met.'
      tags:
        - machine
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/RequestStatus'}
  '/{sortingUnitPrefix}/inventory/v3/app/nio-workstation-blockid:get/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used by the workstation client to request the current Block ID.'
      tags:
        - app
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/NotInOrderWorkstationRequest'}
  '/{sortingUnitPrefix}/inventory/v3/machine/nio-workstation-blockid:get:status/{srcSystem}/{srcInstance}/{dstSystem}/{dstInstance}/{conversationId}':
    post:
      summary: null
      description: 'Used to notify the app of the current Block ID at the workstation.'
      tags:
        - machine
      parameters:
        -
          $ref: '#/definitions/undefined'
      responses:
        default:
          schema: {$ref: '#/definitions/NotInOrderWorkstationRequestStatus'}
definitions:
  $ref:
    - ../ts/request_status.ts
    - ../ts/start_block_request.ts
    - ../ts/stop_block_request.ts
    - ../ts/not_in_order_workstation.ts
    - ../ts/not_in_order_workstation_request_status.ts
